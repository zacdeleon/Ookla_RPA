#!/bin/ksh

#per domain
create_agg()
{
${MYSQL} KJOHN << EOFEOF

CREATE TABLE if not exists CM_PERF_PER_DOMAIN_SUMMARY (
		MONTH INTEGER,
        DOMAIN VARCHAR(20),
        SEVERITY_TYPE VARCHAR(10),
        CNT_IMPLEMENTED INTEGER,
        CNT_PARTIAL INTEGER,
        CNT_DEFERRED INTEGER,
        CNT_REVERTED INTEGER,
        CNT_ABORTED INTEGER,
        TOTAL INTEGER,
        PSR FLOAT,
        ISR FLOAT,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);

EOFEOF
}


agg_script()
{
${MYSQL} KJOHN << EOFEOF

INSERT into CM_PERF_PER_DOMAIN_SUMMARY(MONTH, DOMAIN, SEVERITY_TYPE, CNT_IMPLEMENTED, CNT_PARTIAL, CNT_DEFERRED, CNT_REVERTED, CNT_ABORTED, TOTAL, PSR, ISR)
SELECT MONTH, DOMAIN, SEVERITY_TYPE, IMPLEMENTED, PARTIAL, DEFERRED, REVERTED, ABORTED, TOTAL,
(IMPLEMENTED+PARTIAL+DEFERRED)/TOTAL AS PSR, (IMPLEMENTED+PARTIAL)/(TOTAL-FORCE_MAJEUR) AS ISR
FROM(
	SELECT *, CNT_IMPLEMENTED AS IMPLEMENTED, CNT_PARTIAL AS PARTIAL, CNT_DEFERRED AS DEFERRED, CNT_REVERTED AS REVERTED, CNT_ABORTED AS ABORTED, 
	CNT_IMPLEMENTED+CNT_PARTIAL+CNT_DEFERRED+CNT_REVERTED+CNT_ABORTED AS TOTAL, CNT_FORCE_MAJEUR AS FORCE_MAJEUR
	FROM (
		SELECT *,
		SUM(CASE WHEN STATUS LIKE '%SUCCESSFULLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_IMPLEMENTED,
		SUM(CASE WHEN STATUS LIKE '%PARTIALLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_PARTIAL,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%' THEN 1 ELSE 0 END) AS CNT_DEFERRED,
		SUM(CASE WHEN STATUS LIKE 'REVERTED%' THEN 1 ELSE 0 END) AS CNT_REVERTED,
		SUM(CASE WHEN STATUS LIKE 'ABORTED%' THEN 1 ELSE 0 END) AS CNT_ABORTED,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%FORCE MAJEUR%' THEN 1 ELSE 0 END) AS CNT_FORCE_MAJEUR
		FROM CM_PERFORMANCE_INITIAL 
		WHERE FLAG IS NULL
		GROUP BY MONTH, DOMAIN, SEVERITY_TYPE
	) a
) b;

EOFEOF
}



#per domain and region
create_agg1()
{
${MYSQL} KJOHN << EOFEOF

CREATE TABLE if not exists CM_PERF_PER_DOMAINREGION_SUMMARY (
		MONTH INTEGER,
        DOMAIN VARCHAR(20),
        SEVERITY_TYPE VARCHAR(10),
        REGION VARCHAR(20),
        CNT_IMPLEMENTED INTEGER,
        CNT_PARTIAL INTEGER,
        CNT_DEFERRED INTEGER,
        CNT_REVERTED INTEGER,
        CNT_ABORTED INTEGER,
        TOTAL INTEGER,
        PSR FLOAT,
        ISR FLOAT,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);


CREATE TABLE if not exists CM_PERF_PER_DOMAINREGION_SUMMARY2 (
		MONTH INTEGER,
        DOMAIN VARCHAR(20),
        REGION VARCHAR(20),
        TOT_IMPLEMENTED INTEGER,
        TOT_PARTIAL INTEGER,
        TOT_DEFERRED INTEGER,
        TOT_REVERTED INTEGER,
        TOT_ABORTED INTEGER,
        TOTAL INTEGER,
        PSR FLOAT,
        ISR FLOAT,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);


EOFEOF
}


agg_script1()
{
${MYSQL} KJOHN << EOFEOF

INSERT into CM_PERF_PER_DOMAINREGION_SUMMARY(MONTH, DOMAIN, SEVERITY_TYPE, REGION, CNT_IMPLEMENTED, CNT_PARTIAL, CNT_DEFERRED, CNT_REVERTED, CNT_ABORTED, TOTAL, PSR, ISR)
SELECT MONTH, DOMAIN, SEVERITY_TYPE, REGION, IMPLEMENTED, PARTIAL, DEFERRED, REVERTED, ABORTED, TOTAL,
(IMPLEMENTED+PARTIAL+DEFERRED)/TOTAL AS PSR, (IMPLEMENTED+PARTIAL)/(TOTAL-FORCE_MAJEUR) AS ISR
FROM(
	SELECT *, CNT_IMPLEMENTED AS IMPLEMENTED, CNT_PARTIAL AS PARTIAL, CNT_DEFERRED AS DEFERRED, CNT_REVERTED AS REVERTED, CNT_ABORTED AS ABORTED, 
	CNT_IMPLEMENTED+CNT_PARTIAL+CNT_DEFERRED+CNT_REVERTED+CNT_ABORTED AS TOTAL, CNT_FORCE_MAJEUR AS FORCE_MAJEUR
	FROM (
		SELECT *,
		SUM(CASE WHEN STATUS LIKE '%SUCCESSFULLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_IMPLEMENTED,
		SUM(CASE WHEN STATUS LIKE '%PARTIALLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_PARTIAL,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%' THEN 1 ELSE 0 END) AS CNT_DEFERRED,
		SUM(CASE WHEN STATUS LIKE 'REVERTED%' THEN 1 ELSE 0 END) AS CNT_REVERTED,
		SUM(CASE WHEN STATUS LIKE 'ABORTED%' THEN 1 ELSE 0 END) AS CNT_ABORTED,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%FORCE MAJEUR%' THEN 1 ELSE 0 END) AS CNT_FORCE_MAJEUR
		FROM CM_PERFORMANCE_INITIAL 
		WHERE REGION in ('NCR','NLZ','SLZ','VIS','MIN')
		and DOMAIN in ('TRS','WLN ACCESS','RAN')
		and FLAG IS NULL
		GROUP BY MONTH, DOMAIN, SEVERITY_TYPE, REGION
	) a
) b;


INSERT into CM_PERF_PER_DOMAINREGION_SUMMARY2(MONTH, DOMAIN, REGION, TOT_IMPLEMENTED, TOT_PARTIAL, TOT_DEFERRED, TOT_REVERTED, TOT_ABORTED, TOTAL, PSR, ISR)
SELECT MONTH, DOMAIN, REGION, IMPLEMENTED AS TOT_IMPLEMENTED, PARTIAL AS TOT_PARTIAL, DEFERRED AS TOT_DEFERRED, REVERTED AS TOT_REVERTED, ABORTED AS TOT_ABORTED, TOTAL,
(IMPLEMENTED+PARTIAL+DEFERRED)/TOTAL AS PSR, (IMPLEMENTED+PARTIAL)/(TOTAL-FORCE_MAJEUR) AS ISR
FROM(
	SELECT *, CNT_IMPLEMENTED AS IMPLEMENTED, CNT_PARTIAL AS PARTIAL, CNT_DEFERRED AS DEFERRED, CNT_REVERTED AS REVERTED, CNT_ABORTED AS ABORTED, 
	CNT_IMPLEMENTED+CNT_PARTIAL+CNT_DEFERRED+CNT_REVERTED+CNT_ABORTED AS TOTAL, CNT_FORCE_MAJEUR AS FORCE_MAJEUR
	FROM (
		SELECT *,
		SUM(CASE WHEN STATUS LIKE '%SUCCESSFULLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_IMPLEMENTED,
		SUM(CASE WHEN STATUS LIKE '%PARTIALLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_PARTIAL,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%' THEN 1 ELSE 0 END) AS CNT_DEFERRED,
		SUM(CASE WHEN STATUS LIKE 'REVERTED%' THEN 1 ELSE 0 END) AS CNT_REVERTED,
		SUM(CASE WHEN STATUS LIKE 'ABORTED%' THEN 1 ELSE 0 END) AS CNT_ABORTED,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%FORCE MAJEUR%' THEN 1 ELSE 0 END) AS CNT_FORCE_MAJEUR
		FROM CM_PERFORMANCE_INITIAL 
		WHERE REGION in ('NCR','NLZ','SLZ','VIS','MIN')
		and DOMAIN in ('TRS','WLN ACCESS','RAN')
		and FLAG IS NULL
		GROUP BY MONTH, DOMAIN, REGION
	) a
) b;


EOFEOF
}



#deferment reason per domain and region
create_agg2()
{
${MYSQL} KJOHN << EOFEOF

CREATE TABLE if not exists CM_PERF_DEFERMENT_DOMAINREGION_SUMMARY (
		MONTH INTEGER,
        DOMAIN VARCHAR(20),
        SEVERITY_TYPE VARCHAR(10),
        STATUS VARCHAR(100),
        REGION VARCHAR(20),
        TOTAL_MAJOR INTEGER,
        TOTAL_MINOR INTEGER,
        TOTAL_CRITICAL INTEGER,
        TOTAL_PER_REASON INTEGER,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);

CREATE TABLE if not exists CM_PERF_DEFERMENT_DOMAINREGION_SUMMARY2 (
		MONTH INTEGER,
        DOMAIN VARCHAR(20),
        SEVERITY_TYPE VARCHAR(10),
        REGION VARCHAR(20),
        TOTAL_MAJOR INTEGER,
        TOTAL_MINOR INTEGER,
        TOTAL_CRITICAL INTEGER,
        TOTAL INTEGER,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);

EOFEOF
}


agg_script2()
{
${MYSQL} KJOHN << EOFEOF

INSERT into CM_PERF_DEFERMENT_DOMAINREGION_SUMMARY(MONTH, DOMAIN, SEVERITY_TYPE, STATUS, REGION, TOTAL_MAJOR, TOTAL_MINOR, TOTAL_CRITICAL, TOTAL_PER_REASON)
SELECT MONTH, DOMAIN, SEVERITY_TYPE, STATUS, REGION, C_MAJOR, C_MINOR, C_CRITICAL, TOT_PER_REASON
FROM(
	SELECT *, CNT_MAJOR AS C_MAJOR, CNT_MINOR AS C_MINOR, CNT_CRITICAL AS C_CRITICAL, CNT_MAJOR+CNT_MINOR+CNT_CRITICAL AS TOT_PER_REASON
	FROM(
		SELECT *,
		SUM(CASE WHEN SEVERITY_TYPE LIKE '%MAJOR%' THEN 1 ELSE 0 END) AS CNT_MAJOR,
		SUM(CASE WHEN SEVERITY_TYPE LIKE '%MINOR%' THEN 1 ELSE 0 END) AS CNT_MINOR,
		SUM(CASE WHEN SEVERITY_TYPE LIKE '%CRITICAL%' THEN 1 ELSE 0 END) AS CNT_CRITICAL
		FROM CM_PERFORMANCE_INITIAL 
		WHERE REGION in ('NCR','NLZ','SLZ','VIS','MIN')
		and DOMAIN in ('TRS','WLN ACCESS','RAN')
		and STATUS like 'DEFERRED%'
		and FLAG IS NULL
		GROUP BY MONTH, DOMAIN, SEVERITY_TYPE, REGION, STATUS
	) a
)b;


INSERT into CM_PERF_DEFERMENT_DOMAINREGION_SUMMARY2(MONTH, DOMAIN, SEVERITY_TYPE, REGION, TOTAL_MAJOR, TOTAL_MINOR, TOTAL_CRITICAL, TOTAL)
SELECT MONTH, DOMAIN, SEVERITY_TYPE, REGION, C_MAJOR AS TOTAL_MAJOR, C_MINOR AS TOTAL_MINOR, C_CRITICAL AS TOTAL_CRITICAL, TOTAL
FROM(
	SELECT *, CNT_MAJOR AS C_MAJOR, CNT_MINOR AS C_MINOR, CNT_CRITICAL AS C_CRITICAL, CNT_MAJOR+CNT_MINOR+CNT_CRITICAL AS TOTAL
	FROM(
		SELECT *,
		SUM(CASE WHEN SEVERITY_TYPE LIKE '%MAJOR%' THEN 1 ELSE 0 END) AS CNT_MAJOR,
		SUM(CASE WHEN SEVERITY_TYPE LIKE '%MINOR%' THEN 1 ELSE 0 END) AS CNT_MINOR,
		SUM(CASE WHEN SEVERITY_TYPE LIKE '%CRITICAL%' THEN 1 ELSE 0 END) AS CNT_CRITICAL
		FROM CM_PERFORMANCE_INITIAL 
		WHERE REGION in ('NCR','NLZ','SLZ','VIS','MIN')
		and DOMAIN in ('TRS','WLN ACCESS','RAN')
		and STATUS like 'DEFERRED%'
		and FLAG IS NULL
		GROUP BY MONTH, DOMAIN, SEVERITY_TYPE, REGION
	) a
)b;


EOFEOF
}



#force majeur summary
create_agg3()
{
${MYSQL} KJOHN << EOFEOF

CREATE TABLE if not exists CM_PERF_FORCE_MAJEUR_SUMMARY (
		MONTH INTEGER,
        REGION VARCHAR(20),
        TOTAL INTEGER,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);

EOFEOF
}


agg_script3()
{
${MYSQL} KJOHN << EOFEOF

INSERT INTO CM_PERF_FORCE_MAJEUR_SUMMARY(MONTH, REGION, TOTAL)
SELECT MONTH, REGION, COUNT(*) 
FROM CM_PERFORMANCE_INITIAL
WHERE REGION in ('NCR','NLZ','SLZ','VIS','MIN')
AND STATUS LIKE 'DEFERRED%FORCE MAJEUR%'
and FLAG IS NULL
GROUP BY MONTH, REGION;

EOFEOF
}



#force region summary
create_agg4()
{
${MYSQL} KJOHN << EOFEOF

CREATE TABLE if not exists CM_PERF_PER_REGION_SUMMARY (
		MONTH INTEGER,
        REGION VARCHAR(20),
        CNT_IMPLEMENTED INTEGER,
        CNT_PARTIAL INTEGER,
        CNT_DEFERRED INTEGER,
        CNT_REVERTED INTEGER,
        CNT_ABORTED INTEGER,
        TOTAL_ENDORSED INTEGER,
        PSR FLOAT,
        ISR FLOAT,
        FLAG INT(1),
        EXTRACT_FLAG INT(1)
	);

EOFEOF
}


agg_script4()
{
${MYSQL} KJOHN << EOFEOF

INSERT INTO CM_PERF_PER_REGION_SUMMARY(MONTH, REGION, CNT_IMPLEMENTED, CNT_PARTIAL, CNT_DEFERRED, CNT_REVERTED, CNT_ABORTED, TOTAL_ENDORSED, PSR, ISR)
SELECT MONTH, REGION, IMPLEMENTED, PARTIAL, DEFERRED, REVERTED, ABORTED, TOTAL,
(IMPLEMENTED+PARTIAL+DEFERRED)/TOTAL AS PSR, (IMPLEMENTED+PARTIAL)/(TOTAL-FORCE_MAJEUR) AS ISR
FROM(
	SELECT *, CNT_IMPLEMENTED AS IMPLEMENTED, CNT_PARTIAL AS PARTIAL, CNT_DEFERRED AS DEFERRED, CNT_REVERTED AS REVERTED, CNT_ABORTED AS ABORTED, 
	CNT_IMPLEMENTED+CNT_PARTIAL+CNT_DEFERRED+CNT_REVERTED+CNT_ABORTED AS TOTAL, CNT_FORCE_MAJEUR AS FORCE_MAJEUR
	FROM (
		SELECT *,
		SUM(CASE WHEN STATUS LIKE '%SUCCESSFULLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_IMPLEMENTED,
		SUM(CASE WHEN STATUS LIKE '%PARTIALLY IMPLEMENTED%' THEN 1 ELSE 0 END) AS CNT_PARTIAL,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%' THEN 1 ELSE 0 END) AS CNT_DEFERRED,
		SUM(CASE WHEN STATUS LIKE 'REVERTED%' THEN 1 ELSE 0 END) AS CNT_REVERTED,
		SUM(CASE WHEN STATUS LIKE 'ABORTED%' THEN 1 ELSE 0 END) AS CNT_ABORTED,
		SUM(CASE WHEN STATUS LIKE 'DEFERRED%FORCE MAJEUR%' THEN 1 ELSE 0 END) AS CNT_FORCE_MAJEUR
		FROM CM_PERFORMANCE_INITIAL 
		WHERE REGION in ('NCR','NLZ','SLZ','VIS','MIN')
		and DOMAIN in ('TRS','WLN ACCESS','RAN')
		and FLAG IS NULL
		GROUP BY MONTH, REGION
	) a
) b;


EOFEOF
}



update_flag()
{
${MYSQL} KJOHN << EOFEOF

update CM_PERFORMANCE_INITIAL set FLAG=1 where FLAG is NULL;

EOFEOF
}



#MAIN
petsa=`date "+%Y%m%d%H%M%S"`
MYSQL=/apps/DASHBOARD/MYSQL/bin/mysqlmariadb


#CHECK IF DB IS UP
STATUS=`/apps/DASHBOARD/MYSQL/bin/check_db_status.sql`

if [ "${STATUS}" = "UP_AND_RUNNING" ]
then
echo "`date` MARIA DB is UP and RUNNING"
else
echo "`date` MARIA DB is DOWN...Exiting..."
exit 6
fi

echo "`date` Running Create Aggregate Table..."
create_agg
create_agg1
create_agg2
create_agg3
create_agg4

echo "`date` Running Aggregation..."
agg_script
agg_script1
agg_script2
agg_script3
agg_script4

update_flag

echo "`date` Done Aggregation..."

#END PROGRAM
